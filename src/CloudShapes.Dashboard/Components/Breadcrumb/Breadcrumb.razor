@namespace CloudShapes.Dashboard.Components
@inject IBreadcrumbManager BreadcrumbService
@implements IDisposable
    <nav aria-label="breadcrumb" class="@ClassNames">
    <ul class="breadcrumb">
        @foreach (var item in BreadcrumbService.Items)
        {
            <li class="breadcrumb-item">
                @if (item.Template != null)
                {
                    @item.Template
                }
                else
                {

                    <a href="" @onclick="() => BreadcrumbService.NavigateTo(item)" @onclick:preventDefault>
                        @if (!string.IsNullOrWhiteSpace(item.Icon))
                        {
                            <small class="bi @item.Icon" aria-hidden="true"></small>
                        }
                        @item.Label
                    </a>
                }
            </li>
        }
    </ul>
</nav>

@code {

    [Parameter] public string? Class { get; set; }

    protected virtual string? ClassNames => Class;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.BreadcrumbService.PropertyChanged += this.OnBreadcrumbChanged;
    }

    protected void OnBreadcrumbChanged(object? sender, PropertyChangedEventArgs e) => this.StateHasChanged();

    public void Dispose()
    {
        if (this.BreadcrumbService != null) this.BreadcrumbService.PropertyChanged -= this.OnBreadcrumbChanged;
        GC.SuppressFinalize(this);
    }

}